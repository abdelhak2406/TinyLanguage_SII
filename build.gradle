plugins {
    id 'java'
    id 'antlr'
    id 'idea'
}


repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    antlr "org.antlr:antlr4:4.9.1"
    compile "org.antlr:antlr4-runtime:4.9.1"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}
generateGrammarSource {
    maxHeapSize = "128m"
    arguments += ['-package', 'me.abdelhakHind.TinySii'  ]
}
compileJava.dependsOn generateGrammarSource

sourceSets {
    generated {
        java.srcDir 'generated-src/antlr/main/'
    }
}
compileJava.source sourceSets.generated.java, sourceSets.main.java
clean {
    delete "generated-src"
}
idea {
    module {
        sourceDirs += file("generated-src/antlr/main/")
    }
}
test {
    useJUnitPlatform()
    testLogging {
        events "passed" , "skipped", "failed"
    }
}
task run{

    compileJava.source sourceSets.generated.java, sourceSets.main.java
}
task executerTout{

}
task fatJar (type: Jar){
    manifest {
        attributes('Main-class': 'me.abdelhakHind.TinySii.Main')
    }
    baseName = project.name + '-all'
    from{ configurations.compile.collect{ it.isDirectory()? it :
    zipTree(it)}}
    with jar
}